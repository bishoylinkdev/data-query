logging.config=classpath:logback.xml

camel.springboot.name=data-query

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.address=0.0.0.0

# lets use a different management port in case you need to listen to HTTP requests on 8080
management.port=8081

# disable all management enpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

spring.datasource-custom.url='jdbc:postgresql://${DB_SERVICE_NAME:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:imap_state_store}?ssl=${POSTGRES_SSL:false}&sslmode=${POSTGRES_SSL_MODE$:allow}'
spring.datasource-custom.username='${DB_USER_NAME:postgres}'
spring.datasource-custom.password='${DB_USER_PASSWORD:admin}'
spring.datasource-custom.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=Validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true